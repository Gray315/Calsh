
# ========================
# 订阅（proxy-providers）
# ========================

proxy-providers:
  Sub Store:
    url: "http://192.168.10.1:3008/T3B9dgzBzdRbBF8Aqx7P/download/collection/Sub-Store"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    proxy: 直连

# ========================
# 静态代理（proxies）
# ========================
proxies:
  - {name: 直连, type: direct}
  - {name: 拒绝, type: reject}  
  
# 端口设置（OpenClash 透明代理常用）
port: 7890
socks-port: 7891
redir-port: 7892
tproxy-port: 7895
mixed-port: 7893

allow-lan: true
mode: rule
log-level: info

external-controller: 0.0.0.0:9090
secret: "666666"

# ========================
# DNS 设置（配合 OpenClash，dnsmasq -> 7874）
# ========================
dns:
  enable: true
  listen: 0.0.0.0:7874
  ipv6: false
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  nameserver:
    - 223.5.5.5
    - 119.29.29.29
  fake-ip-filter:
    - +.lan
    - +.local
    - geosite:cn

ipv6: false

# ========================
# TUN 模块（透明代理下通常关闭）
# ========================
tun:
  enable: false
  stack: system
  device: Meta
  endpoint-independent-nat: true
  auto-route: false
  auto-detect-interface: false
  auto-redirect: false
  strict-route: false

profile:
  store-selected: true
  store-fake-ip: true


# ========================
# 策略组（Smart 智能选路）
# ========================
default: &default
  type: select
  proxies:
    - 直连
    - 所有-智选
    - 所有-手选
    
    - 香港-智选
    - 香港-故转
    
    - 台湾-智选
    - 台湾-故转
    
    - 新加坡-智选
    - 新加坡-故转
    
    - 日本-智选
    - 日本-故转
    
    - 美国-智选
    - 美国-故转
    
    - 英国-智选
    - 英国-故转
    
    - 其他-故转
    - 拒绝

proxy-groups:

  # 所有组
  - name: 所有-手选
    type: select
    use: [Sub Store]
    filter: "^((?!(直连|拒绝)).)*$"

  - name: 所有-智选
    type: smart
    use: [Sub Store]
    policy-priority: ".*GF.*:0.8;.*(香港|HK).*:1.2"
    uselightgbm: true
    collectdata: true
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 60
      tolerance: 2
    strategy: sticky-sessions
    interval: 180
    filter: "^((?!(直连|拒绝)).)*$"

  # 业务分流组
  - {name: 国内, <<: *default}
  - {name: 国外, <<: *default}
  - {name: 其他, <<: *default}
  - {name: YouTube, <<: *default}
  - {name: Google, <<: *default}
  - {name: GitHub, <<: *default}
  - {name: TikTok, <<: *default}
  - {name: Steam, <<: *default}
  - {name: Telegram, <<: *default}
  - {name: Facebook, <<: *default}
  - {name: Twitter(X), <<: *default}
  - {name: ChatGPT, <<: *default}
  - {name: Meta AI, <<: *default}
  - {name: AI, <<: *default}
  - {name: Claude, <<: *default}
  - {name: Stream Media, <<: *default}
  - {name: Perplexity, <<: *default}
  - {name: WhatsApp, <<: *default}
  - {name: Spotify, <<: *default}
  - {name: Crypto, <<: *default}
  - {name: Amazon, <<: *default}
  - {name: Games, <<: *default}
  - {name: Reddit, <<: *default}
  - {name: Game, <<: *default}
  - {name: Test, <<: *default}
  - {name: HBO, <<: *default}
  - {name: Disney, <<: *default}
  - {name: Netflix, <<: *default}
  # 直连/拒绝分组
  - {name: Nvidia, <<: *default}
  - {name: Apple, <<: *default}
  - {name: Microsoft, <<: *default}
  - {name: Block, <<: *default}

  # 其他组（地区类）
  - name: 其他-故转
    type: fallback
    interval: 180
    lazy: true
    proxies: [其他-手选, 其他-智选]

  - name: 其他-手选
    type: select
    use: [Sub Store]
    filter: "^((?!(直连|拒绝|香港|广港|HK|Hong Kong|HongKong|台湾|台灣|TW|Taiwan|日本|JP|Japan|东京|大阪|新加坡|SG|Singapore|狮城|韩国|韓國|KR|Korea|首尔|美国|US|United States|纽约|洛杉|圣何塞|英国|UK|United Kingdom|伦敦|London)).)*$"

  - name: 其他-智选
    type: smart
    use: [Sub Store]
    policy-priority: ".*GF.*:0.8"
    uselightgbm: true
    collectdata: true
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 60
      tolerance: 2
    strategy: sticky-sessions
    interval: 180
    filter: "^((?!(直连|拒绝|香港|广港|HK|Hong Kong|HongKong|台湾|台灣|TW|Taiwan|日本|JP|Japan|东京|大阪|新加坡|SG|Singapore|狮城|韩国|韓國|KR|Korea|首尔|美国|US|United States|纽约|洛杉|圣何塞|英国|UK|United Kingdom|伦敦|London)).)*$"

  # 香港组
  - name: 香港-故转
    type: fallback
    interval: 180
    lazy: true
    proxies: [香港-手选, 香港-智选]

  - name: 香港-手选
    type: select
    use: [Sub Store]
    filter: "(?=.*(香港|广港|HK|Hong Kong|HongKong)).*$"

  - name: 香港-智选
    type: smart
    use: [Sub Store]
    policy-priority: ".*GF.*:0.8"
    uselightgbm: true
    collectdata: true
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 60
      tolerance: 2
    strategy: sticky-sessions
    interval: 180
    filter: "(?=.*(香港|广港|HK|Hong Kong|HongKong)).*$"

  # 台湾组
  - name: 台湾-故转
    type: fallback
    interval: 180
    lazy: true
    proxies: [台湾-手选, 台湾-智选]

  - name: 台湾-手选
    type: select
    use: [Sub Store]
    filter: "(?=.*(台湾|台灣|TW|Taiwan|广台)).*$"

  - name: 台湾-智选
    type: smart
    use: [Sub Store]
    policy-priority: ".*GF.*:0.8"
    uselightgbm: true
    collectdata: true
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 60
      tolerance: 2
    strategy: sticky-sessions
    interval: 180
    filter: "(?=.*(台湾|台灣|TW|Taiwan|广台)).*$"

  # 日本组
  - name: 日本-故转
    type: fallback
    interval: 180
    lazy: true
    proxies: [日本-手选, 日本-智选]

  - name: 日本-手选
    type: select
    use: [Sub Store]
    filter: "(?=.*(日本|JP|Japan|东京|大阪|广日|Tokyo|Osaka)).*$"

  - name: 日本-智选
    type: smart
    use: [Sub Store]
    policy-priority: ".*GF.*:0.8"
    uselightgbm: true
    collectdata: true
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 60
      tolerance: 2
    strategy: sticky-sessions
    interval: 180
    filter: "(?=.*(日本|JP|Japan|东京|大阪|广日|Tokyo|Osaka)).*$"

  # 新加坡组
  - name: 新加坡-故转
    type: fallback
    interval: 180
    lazy: true
    proxies: [新加坡-手选, 新加坡-智选]

  - name: 新加坡-手选
    type: select
    use: [Sub Store]
    filter: "(?=.*(新加坡|SG|Singapore|狮城|广新)).*$"

  - name: 新加坡-智选
    type: smart
    use: [Sub Store]
    policy-priority: ".*GF.*:0.8"
    uselightgbm: true
    collectdata: true
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 60
      tolerance: 2
    strategy: sticky-sessions
    interval: 180
    filter: "(?=.*(新加坡|SG|Singapore|狮城|广新)).*$"

  # 韩国组
  - name: 韩国-故转
    type: fallback
    interval: 180
    lazy: true
    proxies: [韩国-手选, 韩国-智选]

  - name: 韩国-手选
    type: select
    use: [Sub Store]
    filter: "(?=.*(韩国|韓國|KR|Korea|首尔|广韩|Seoul)).*$"

  - name: 韩国-智选
    type: smart
    use: [Sub Store]
    policy-priority: ".*GF.*:0.8"
    uselightgbm: true
    collectdata: true
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 60
      tolerance: 2
    strategy: sticky-sessions
    interval: 180
    filter: "(?=.*(韩国|韓國|KR|Korea|首尔|广韩|Seoul)).*$"

  # 美国组
  - name: 美国-故转
    type: fallback
    interval: 180
    lazy: true
    proxies: [美国-手选, 美国-智选]

  - name: 美国-手选
    type: select
    use: [Sub Store]
    filter: "(?=.*(美国|US|United States|纽约|洛杉|圣何塞|广美|New York|Los Angeles|San Jose)).*$"

  - name: 美国-智选
    type: smart
    use: [Sub Store]
    policy-priority: ".*GF.*:0.8"
    uselightgbm: true
    collectdata: true
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 60
      tolerance: 2
    strategy: sticky-sessions
    interval: 180
    filter: "(?=.*(美国|US|United States|纽约|洛杉|圣何塞|广美|New York|Los Angeles|San Jose)).*$"

  # 英国组
  - name: 英国-故转
    type: fallback
    interval: 180
    lazy: true
    proxies: [英国-手选, 英国-智选]

  - name: 英国-手选
    type: select
    use: [Sub Store]
    filter: "(?=.*(英国|UK|United Kingdom|伦敦|London)).*$"

  - name: 英国-智选
    type: smart
    use: [Sub Store]
    policy-priority: ".*GF.*:0.8"
    uselightgbm: true
    collectdata: true
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 60
      tolerance: 2
    strategy: sticky-sessions
    interval: 180
    filter: "(?=.*(英国|UK|United Kingdom|伦敦|London)).*$"

# ========================
# 规则引擎（rules）
# ========================
rules:
  - RULE-SET,Block / Domain,Block
  - RULE-SET,TEST / Domain,Test
  - RULE-SET,ChatGPT / Domain,ChatGPT
  - RULE-SET,Claude / Domain,Claude
  - RULE-SET,Meta AI / Domain,Meta AI
  - RULE-SET,Perplexity / Domain,Perplexity
  - RULE-SET,GitHub / Domain,GitHub
  - RULE-SET,Telegram / Domain,Telegram
  - RULE-SET,Telegram / IP,Telegram,no-resolve
  - RULE-SET,Twitter / Domain,Twitter(X)
  - RULE-SET,WhatsApp / Domain,WhatsApp
  - RULE-SET,Facebook / Domain,Facebook
  - RULE-SET,Amazon / Domain,Amazon
  - RULE-SET,Apple / Domain,Apple
  - RULE-SET,Apple-CN / Domain,Apple
  - RULE-SET,Microsoft / Domain,Microsoft
  - RULE-SET,OKX / Domain,Crypto
  - RULE-SET,Bybit / Domain,Crypto
  - RULE-SET,Binance / Domain,Crypto
  - RULE-SET,Youtube / Domain,YouTube         
  - RULE-SET,TikTok / Domain,TikTok
  - RULE-SET,Netflix / Domain,Netflix
  - RULE-SET,Netflix / IP,Netflix,no-resolve
  - RULE-SET,Disney / Domain,Disney
  - RULE-SET,HBO / Domain,HBO
  - RULE-SET,Spotify / Domain,Spotify
  - RULE-SET,Steam / Domain,Steam
  - RULE-SET,Epic / Domain,Game
  - RULE-SET,EA / Domain,Game
  - RULE-SET,Blizzard / Domain,Game
  - RULE-SET,UBI / Domain,Game
  - RULE-SET,PlayStation / Domain,Game
  - RULE-SET,Nintend / Domain,Game
  - RULE-SET,Google / Domain,Google
  - RULE-SET,Google / IP,Google,no-resolve
  - RULE-SET,Proxy / Domain,国外
  - RULE-SET,Globe / Domain,国外
  - RULE-SET,Direct / Domain,国内
  - RULE-SET,China / Domain,国内
  - RULE-SET,China / IP,国内,no-resolve
  - RULE-SET,Private / Domain,国内
  - RULE-SET,Reddit / Domain,Reddit
  - RULE-SET,Nvidia / Domain,Nvidia
  - RULE-SET,Crunchyroll / Domain,Stream Media
  - RULE-SET,Copilot / Domain,AI
  - RULE-SET,Gemini / Domain,AI
  - MATCH,其他

# ========================
# 规则集提供者（Meta 支持 mrs）
# ========================
rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}

rule-providers:
  Block / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/Block.list"}
  TEST / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/Check.list"}
  ChatGPT / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/openai.mrs"}
  Claude / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Claude/Claude.list"}
  Meta AI / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/MetaAi.list"}
  Perplexity / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/perplexity.mrs"}
  Copilot / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/Copilot.list"}
  Gemini / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/Gemini.list"}
  GitHub / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/github.mrs"}
  Telegram / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/telegram.mrs"}
  Telegram / IP: {<<: *ip, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geoip/telegram.mrs"}
  Twitter / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/x.mrs"}
  WhatsApp / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Whatsapp/Whatsapp.list"}
  Facebook / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/facebook.mrs"}
  Amazon / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/amazon.mrs"}
  Apple-CN / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/apple-cn.mrs"}
  Apple / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/apple.mrs"}
  Microsoft / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/microsoft.mrs"}
  OKX / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/okx.mrs"}
  Bybit / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/bybit.mrs"}
  Binance / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/binance.mrs"}
  TikTok / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/tiktok.mrs"}
  Netflix / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/netflix.mrs"}
  Netflix / IP: {<<: *ip, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geoip/netflix.mrs"}
  Disney / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/disney.mrs"}
  HBO / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/hbo.mrs"}
  Spotify / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/spotify.mrs"}
  Steam / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/steam.mrs"}
  Epic / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Epic/Epic.list"}
  EA / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/EA/EA.list"}
  Blizzard / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Blizzard/Blizzard.list"}
  UBI / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/UBI/UBI.list"}
  PlayStation / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/PlayStation/PlayStation.list"}
  Nintend / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Nintendo/Nintendo.list"}
  Proxy / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/Proxy.list"}
  Globe / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Global/Global.list"}
  Direct / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/Direct.list"}
  China / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/cn.mrs"}
  China / IP: {<<: *ip, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geoip/cn.mrs"}
  Private / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/private.mrs"}
  Nvidia / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Nvidia/Nvidia.list"}
  Crunchyroll / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/Crunchyroll.list"}
  Reddit / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/reddit.mrs"}
  Youtube / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/youtube.mrs"}
  Google / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/google.mrs"}
  Google / IP: {<<: *ip, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geoip/google.mrs"}
  PUBG / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/PUBG/PUBG.list"}  # [新增]

